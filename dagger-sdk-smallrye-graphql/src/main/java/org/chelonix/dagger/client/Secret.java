// This class has been generated by dagger-java-sdk. DO NOT EDIT.
package org.chelonix.dagger.client;

import java.lang.InterruptedException;
import java.lang.String;
import java.util.concurrent.ExecutionException;

/**
 * A reference to a secret value, which can be handled more safely than the value itself.
 */
public class Secret implements IdProvider<SecretID> {
  private QueryContext queryContext;

  private SecretID id;

  private String plaintext;

  /**
   * Empty constructor for JSON-B deserialization
   */
  protected Secret() {
  }

  Secret(QueryContext queryContext) {
    this.queryContext = queryContext;
  }

  /**
   * <p>The identifier for this secret.</p>
   */
  public SecretID id() throws InterruptedException, ExecutionException, DaggerQueryException {
    if (this.id != null) {
      return id;
    }
    QueryContext ctx = this.queryContext.chain("id");
    return ctx.executeQuery(SecretID.class);
  }

  /**
   * <p>The value of this secret.</p>
   */
  public String plaintext() throws InterruptedException, ExecutionException, DaggerQueryException {
    if (this.plaintext != null) {
      return plaintext;
    }
    QueryContext ctx = this.queryContext.chain("plaintext");
    return ctx.executeQuery(String.class);
  }
}
